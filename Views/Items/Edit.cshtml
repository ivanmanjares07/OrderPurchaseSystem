@model OrderPurchaseSystem.ViewModels.PurchaseItemFormViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Items"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseItem.SKUId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PurchaseItem.SKUId, new SelectList(Model.SKUs, "Id", "Name"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PurchaseItem.SKUId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchaseItem.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PurchaseItem.Quantity, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                @Html.ValidationMessageFor(model => model.PurchaseItem.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.PurchaseItem.Id)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Order", "Edit", "Order", new { id = Model.PurchaseItem.PurchaseOrderId }, null)
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}